%{
    #include <stdio.h>
	#include <stdlib.h>
	extern FILE* yyin;
%}

%token SPACE MAIN LEFT LEFT_PARENTHESIS RIGHT_PARENTHESIS NEWLINE BEGINTOKEN ENDTOKEN INT TAB IDENTIFIER COMMA SEMICOLON IF RELOP FOR NUMBER UNARY_OPERATOR ASSIGNMENT_OPERATOR

%%
function: type SPACE MAIN LEFT_PARENTHESIS RIGHT_PARENTHESIS NEWLINE BEGINTOKEN NEWLINE body NEWLINE ENDTOKEN NEWLINE { printf("Valid\n"); exit(0); };

body: tabspace declaration_statement NEWLINE tabspace if_statement NEWLINE tabspace for_statement NEWLINE;

declaration_statement: type SPACE IDENTIFIER COMMA SPACE IDENTIFIER COMMA SPACE IDENTIFIER COMMA SPACE IDENTIFIER SEMICOLON;

if_statement: IF LEFT_PARENTHESIS IDENTIFIER SPACE RELOP SPACE IDENTIFIER RIGHT_PARENTHESIS NEWLINE tabspace IDENTIFIER ASSIGNMENT_OPERATOR IDENTIFIER SEMICOLON;

for_statement:  for_condition NEWLINE BEGINTOKEN NEWLINE for_body NEWLINE ENDTOKEN;

for_condition: FOR LEFT_PARENTHESIS IDENTIFIER ASSIGNMENT_OPERATOR NUMBER SEMICOLON SPACE IDENTIFIER SPACE RELOP SPACE IDENTIFIER SEMICOLON SPACE UNARY_OPERATOR IDENTIFIER RIGHT_PARENTHESIS;

for_body: tabspace IDENTIFIER ASSIGNMENT_OPERATOR NUMBER SEMICOLON;

tabspace: TAB tabspace|;

type: INT;
%%

int yyerror(char* msg) { printf("Invalid declaration\n"); exit(0); }

void main(int argc, char *argv[])
{
	yyin=fopen(argv[1],"r");
	yyparse();
}